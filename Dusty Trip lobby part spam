-- Thanks to Inf Yield for sections of this code

repeat wait() until game:IsLoaded()
local queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
if queueteleport then
	queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/DannyH3103/scripts/main/Dusty%20Trip%20lobby%20part%20spam'))()")
end
wait(4)
local char = game.Players.LocalPlayer.Character
local MovFolder = Instance.new("Folder", char)
local bricks = {}
local inLobby = {}
local timeout, refresh = 10, 0.1 -- Change timeout(secconds) for how long the script should wait for net ownership before returning. Refresh(secconds) is how often it checks for signs of net ownership.
local lobbyDetector = Instance.new("Part")
lobbyDetector.Anchored = true
lobbyDetector.Transparency = 1
lobbyDetector.Position = Vector3.new(35, 20, -170)
lobbyDetector.Size = Vector3.new(100, 100, 100)
for _,part in pairs(lobbyDetector:GetTouchingParts()) do
    if part:IsDescendantOf(game.Workspace.SkinData) and table.find(inLobby, Brick) == nil then
		table.insert(inLobby, part)
		print(part)
	end
end
lobbyDetector.CanCollide = false
lobbyDetector.Parent = game.Workspace
for _,BrickFolder in pairs(game.Workspace.SkinData:GetChildren()) do for _,Brick in pairs(BrickFolder.Colors:GetChildren()) do
		if table.find(inLobby, Brick) == nil then
			Brick.CanCollide = false

			local at = Instance.new("Attachment")
			at.Parent = Brick

			local ap = Instance.new("AlignPosition")
			ap.Parent = MovFolder
			ap.Mode = Enum.PositionAlignmentMode.OneAttachment
			ap.MaxForce = 9e9
			ap.Position = Vector3.new(35, 40, -170)
			ap.ReactionForceEnabled = true
			ap.Attachment0 = at

			char.HumanoidRootPart.CFrame = CFrame.new(Brick.Position + Vector3.new(5, 2, 0))

			local oldPos = Brick.Position
			local loops = 0
			while (oldPos - Brick.Position).magnitude < 15 and loops <= timeout / refresh do
				loops += 1
				wait(refresh)
			end

			table.insert(bricks, Brick)
		end
end end

wait(2)

MovFolder:Destroy()
lobbyDetector:Destroy()
for _,Brick in pairs(bricks) do
	Brick.CanCollide = true
	Brick.Attachment:Destroy()
end
char.HumanoidRootPart.CFrame = CFrame.new(50, 5, -183)

wait(2)

-- thanks to NoobSploit for fixing
local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
if httprequest then
	local servers = {}
	local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100&excludeFullGames=true", game.PlaceId)})
	local body = game:GetService("HttpService"):JSONDecode(req.Body)

	if body and body.data then
		for i, v in next, body.data do
			if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
				table.insert(servers, 1, v.id)
			end
		end
	end

	if #servers > 0 then
		game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
	end
end
