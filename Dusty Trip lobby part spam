local char = game.Players.LocalPlayer.Character
local MovFolder = Instance.new("Folder", char)
local bricks = {}
local inLobby = {}
local timeout, refresh = 10, 0.1 -- Change timeout(secconds) for how long the script should wait for net ownership before returning. Refresh(secconds) is how often it checks for signs of net ownership.
for _,part in pairs(game.Workspace:GetPartBoundsInBox(CFrame.new(35, 20, -170), Vector3.new(100, 100, 100))) do
	if part:IsDescendantOf(game.Workspace.SkinData) and table.find(inLobby, Brick) == nil then
		table.insert(inLobby, part)
		print(part)
	end
end
for _,BrickFolder in pairs(game.Workspace.SkinData:GetChildren()) do for _,Brick in pairs(BrickFolder.Colors:GetChildren()) do
		if table.find(inLobby, Brick) == nil then
			Brick.CanCollide = false

			local at = Instance.new("Attachment")
			at.Parent = Brick

			local ap = Instance.new("AlignPosition")
			ap.Parent = MovFolder
			ap.Mode = Enum.PositionAlignmentMode.OneAttachment
			ap.MaxForce = 9e9
			ap.Position = Vector3.new(35, 40, -170)
			ap.ReactionForceEnabled = true
			ap.Attachment0 = at

			char.HumanoidRootPart.CFrame = CFrame.new(Brick.Position + Vector3.new(5, 2, 0))

			local oldPos = Brick.Position
			local loops = 0
			while (oldPos - Brick.Position).magnitude < 15 and loops <= timeout / refresh do
				loops += 1
				wait(refresh)
			end

			table.insert(bricks, Brick)
		end
	end end

wait(2)

MovFolder:Destroy()
for _,Brick in pairs(bricks) do
	Brick.CanCollide = true
	Brick.Attachment:Destroy()
end
char.HumanoidRootPart.CFrame = CFrame.new(50, 5, -183)
